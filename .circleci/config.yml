version: 2
jobs:
  build:
    working_directory: /go/gopherjs
    docker:
      # We have a custom installation of Go below so this version is (largely) irrelevant.
      - image: circleci/golang:1.10

    environment:
      NVM_VERSION: v0.33.11
      GO_VERSION: go1.11.2
      NODE_VERSION: 10.13.0

    steps:
      - checkout

      - run: |
          echo 'export NODE_PATH="$HOME/.node_libraries:$NODE_PATH"' >> $BASH_ENV
          echo 'export GO111MODULE=on' >> $BASH_ENV
          echo 'export PATH="$PWD/node_modules/.bin:$PATH"' >> $BASH_ENV
          git --version

      - run: |
          # Install nvm.
          git clone https://github.com/creationix/nvm.git $HOME/.nvm
          cd $HOME/.nvm && git checkout $NVM_VERSION
          echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
          echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV

      - run: |
          # Install our own local Go version; we need src/path/filepath to be writable for certain tests.
          mkdir $HOME/go
          if [[ "$GO_VERSION" =~ go* ]]
          then
            curl https://storage.googleapis.com/golang/$GO_VERSION.linux-amd64.tar.gz | tar -C $HOME -xz
          else
            sudo apt-get -y -qq update < /dev/null > /dev/null
            sudo apt-get -y -qq install python-pip < /dev/null > /dev/null
            pip install -q awscli
            export PATH=$HOME/.local/bin:$PATH
            aws s3 cp "s3://io.myitcv.gobuilds/linux_amd64/$GO_VERSION.tar.gz" - | tar -C $HOME -xz
          fi
          chmod a+w $HOME/go/src/path/filepath
          echo 'export PATH="$HOME/go/bin:$PATH"' >> $BASH_ENV

      - run: |
          # Per https://github.com/gopherjs/gopherjs/pull/687.
          echo 'ulimit -s 10000' >> $BASH_ENV

      - run: |
          # Setup our required Node version now that nvm is installed.
          nvm install $NODE_VERSION node
          nvm alias default $NODE_VERSION
          echo 'export NODE_PATH="$(npm root --global):$NODE_PATH"' >> $BASH_ENV

      - run: |
          # Verify our environment setup.
          which node
          which go
          node --version
          go version
          go env

      - run: |
          # Per https://github.com/gopherjs/gopherjs/blob/master/doc/syscalls.md.
          npm install -g node-gyp
          cd node-syscall && node-gyp rebuild && mkdir -p $HOME/.node_libraries/ && cp build/Release/syscall.node $HOME/.node_libraries/syscall.node

          npm install -g source-map-support

          # this gives us the repo-local binaries we require
          npm install
      - run: go install github.com/gopherjs/gopherjs
      - run: go generate github.com/gopherjs/gopherjs/compiler/prelude
      - run: go mod tidy && go list all > /dev/null # https://github.com/golang/go/issues/27868#issuecomment-431413621
      - run: go run genmodstubbs.go
      - run: git diff
      - run: diff -u <(echo -n) <(git status --porcelain)
      - run: diff -u <(echo -n) <(gofmt -d .)
      - run: go vet .
      - run: go vet $(go list ./... | grep -v github.com/gopherjs/gopherjs/tests)
      - run: diff -u <(echo "github.com/gopherjs/gopherjs/compiler/natives") <(go list ./compiler/natives/...)
      - run: gopherjs install -v net/http
      - run: gopherjs test --minify -v --short github.com/gopherjs/gopherjs/tests/... $(go list std | grep -v -x -f .std_test_pkg_exclusions)
      - run: go test -v ./...
      - run: gopherjs test -v fmt
